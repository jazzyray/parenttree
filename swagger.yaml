---
swagger: "2.0"
info:
  description: "Parent Tree API. For retreiving the parent tree for a set of concepts"
  version: "v0.0.1"
  title: "Parent Tree API"
  termsOfService: "http://www.yourterms.com"
  contact:
    name: "Jem Rayfield"
    url: "http://ontotext.com"
    email: "jem.rayfield@ontotext.com"
host: "localhost:9105"
basePath: "/parenttree"
tags:
- name: "Parent Tree API"
schemes:
- "http"
- "https"
paths:
  /parenttree:
    get:
      tags:
      - "Parent Tree API"
      summary: "Get Parent Tree for a set of concepts"
      description: ""
      operationId: "getParentTree"
      produces:
      - "application/vnd.ontotext.parenttree+json; charset=utf-8"
      - "application/vnd.ontotext.parenttree+xml; charset=utf-8"
      parameters:
      - name: "conceptId"
        in: "query"
        description: "Concept Ids"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Request-ID"
        in: "header"
        description: "Transaction Id"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/ParentTree"
          headers:
            X-Cache:
              type: "boolean"
              description: "Explains whether or not a cache was used"
            ETag:
              type: "string"
              description: "Parent Tree ETag for cache control"
            Vary:
              type: "string"
              description: "Make sure proxies cache by Vary"
            Allow:
              type: "string"
              description: "CORS Allowed Methods"
        400:
          description: "Invalid Concept Ids supplied"
        404:
          description: "Concept Ids not found"
definitions:
  Node:
    type: "object"
    properties:
      id:
        type: "string"
        xml:
          attribute: true
      prefLabel:
        type: "string"
        xml:
          attribute: true
      altLabels:
        type: "array"
        items:
          type: "string"
      prefLabelTrees:
        type: "array"
        items:
          type: "string"
  ParentTree:
    type: "object"
    properties:
      tree:
        xml:
          namespace: "http://www.ontotext.com/parenttree/"
        $ref: "#/definitions/Tree"
      nodes:
        type: "array"
        xml:
          name: "node"
          namespace: "http://www.ontotext.com/parenttree/"
          wrapped: true
        items:
          $ref: "#/definitions/Node"
    xml:
      name: "parenttree"
      namespace: "http://www.ontotext.com/parenttree/"
  Tree:
    type: "object"
    properties:
      node:
        xml:
          namespace: "http://www.ontotext.com/parenttree/"
        $ref: "#/definitions/TreeNode"
      children:
        type: "array"
        xml:
          namespace: "http://www.ontotext.com/parenttree/"
        items:
          $ref: "#/definitions/Tree"
  TreeNode:
    type: "object"
    properties:
      prefLabelTrees:
        type: "array"
        items:
          type: "string"
      altLabel:
        type: "array"
        items:
          type: "string"
      prefLabel:
        type: "string"
      id:
        type: "string"
        xml:
          attribute: true
